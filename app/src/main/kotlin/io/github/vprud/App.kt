/*
 * This source file was generated by the Gradle 'init' task
 */
package io.github.vprud

import io.github.cdimascio.dotenv.dotenv
import okhttp3.OkHttpClient

class App {
    val greeting: String
        get() {
            return "Hello World! from ${System.getProperty("java.vendor")} ${System.getProperty("java.version")}"
        }
}

fun main() {
    val env = dotenv { ignoreIfMissing = true }

    val tgToken = env["TG_TOKEN"] ?: error("TG_TOKEN not set in .env")
    val githubToken = dotenv()["GITHUB_TOKEN"] ?: error("GITHUB_TOKEN not set in .env")
    val dbConfig =
        DbConfig(
            url = env["DB_URL"] ?: error("DB_URL not set in .env"),
            user = env["DB_USER"] ?: error("DB_USER not set in .env"),
            password = env["DB_PASSWORD"] ?: error("DB_PASSWORD not set in .env"),
        )

    Database.init(dbConfig)

    val subscriptionRepository = SubscriptionRepositoryImpl()
    val issueRepository = IssueRepositoryImpl()
    val httpClient = OkHttpClient()
    val gitHubClient = GitHubClient(httpClient, githubToken)
    val subscriptionManager = SubscriptionManager(subscriptionRepository)
    val tracker = GitHubIssueTracker(gitHubClient, subscriptionManager, issueRepository)
    val checker = IssueUpdateChecker(tracker)
    val botService = createDefaultBotService(checker)

    botService.startBot(
        tgToken,
        tracker,
    )
}
