name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: gradle

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        gradle-version: wrapper

    - name: Generate Gradle Wrapper
      run: gradle wrapper

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Check code style
      run: ./gradlew ktlintCheckAll

    - name: Run tests
      run: ./gradlew test
      env:
        POSTGRES_HOST: localhost
        POSTGRES_PORT: 5432
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_DB: postgres

    - name: Build with Gradle
      run: ./gradlew build

    - name: Build Docker image
      run: docker build -t issue-subscriber .

    - name: Run Docker Compose
      run: docker-compose up -d

    - name: Wait for PostgreSQL
      run: |
        timeout 30s bash -c 'until docker exec github_bot_postgres pg_isready -U postgres; do sleep 1; done'

    - name: Run tests in Docker
      run: |
        docker run --network host \
          -e POSTGRES_HOST=localhost \
          -e POSTGRES_PORT=5432 \
          -e POSTGRES_USER=postgres \
          -e POSTGRES_PASSWORD=postgres \
          -e POSTGRES_DB=postgres \
          issue-subscriber

    - name: Cleanup
      if: always()
      run: docker-compose down 